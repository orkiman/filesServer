iterate files in folders.
move heic to outer folder and replace it with jpg
create thumbnails



this is my dynamic dns : https://dynv6.com/ 
my url : https://orkiman.v6.rocks

this is how created ssl certificates using 
pip install certbot
certbot certonly --standalone -d orkiman.v6.rocks

general planning:
all photos will be placed inside the photos directory.

server start: all photos directory will be scanned:
1. heic files will be converted to jpg, placed in the heic directory and thumbnail will be created for the new jpg
2. thumbnails will be created and placed in the thumbnails directory for each photo and video
* concurently

albums:
each photo can be added to multiple albums
the information about the album will be stored in a data file (choose format)

dependecies list:
go ;)
imagemagick
libheif-dev
ffmpeg
------------------
opencv: (on debian)

sudo apt update
sudo apt install -y build-essential cmake pkg-config libjpeg-dev libpng-dev libtiff-dev libavcodec-dev libavformat-dev libswscale-dev libv4l-dev libxvidcore-dev libx264-dev libgtk-3-dev libatlas-base-dev gfortran python3-dev

cd ~
wget -O opencv.zip https://github.com/opencv/opencv/archive/4.x.zip
unzip opencv.zip
cd opencv-4.x
mkdir build && cd build
cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local ..
make -j$(nproc)
sudo make install
 i had to :
 echo 'export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig' >> ~/.bashrc
echo 'export CGO_CPPFLAGS="-I/usr/local/include/opencv4"' >> ~/.bashrc
echo 'export CGO_LDFLAGS="-L/usr/local/lib -lopencv_core -lopencv_dnn -lopencv_imgproc"' >> ~/.bashrc

and edit launch.json to debug:
{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Launch Package",
            "type": "go",
            "request": "launch",
            "mode": "auto",
            "program": "${fileDirname}",
            "buildFlags": ["-buildvcs=false"],
            "env": {
                "PKG_CONFIG_PATH": "${env:PKG_CONFIG_PATH}:/usr/local/lib/pkgconfig",
                "CGO_CPPFLAGS": "-I/usr/local/include/opencv4",
                "CGO_LDFLAGS": "-L/usr/local/lib -lopencv_core -lopencv_dnn -lopencv_imgproc"
            }
        }
    ]
}

-------------------
face detection resources i used : https://gocv.io/writing-code/more-examples/ -> DNN Detection

